---
title: "table1_descrp_stat"
format: docx
execute: 
  warning: false
  message: false
editor: visual
---

```{r}
library(tidyverse)
library(sf)
library(MASS)
library(broom)
library(gtsummary)
library(patchwork)

# 0. import data----------------
predict312k_calle_adj <- readRDS("../../../../clean_data/predict24/calle_predict24_1519adj.rds")
#additional road characteristics
add_gis <- readRDS("../../../../clean_data/calles/calle_rename_adj_df.rds") %>% 
  dplyr::select(CodigoCL = codigocl,
    road_width, num_lanes_total, st_dir) 

#collision from raw (need to populate 0)
collision_calle <- readRDS("../../../../clean_data/collision/collision_calle_df.rds")
#covariates
covar_100 <- readRDS("../../../../clean_data/covar_mzn/covar_calle100m.rds")
#road_type
road_type <- readRDS("../../../../clean_data/road_type/road_type_calle.rds")

ses_100 <- readRDS("../../../../clean_data/covar_mzn/ses_calle100m.rds")

#population from 800m buffer
pop800 <- readRDS("../../../../clean_data/covar_mzn/pop_calle800m.rds") %>% 
  mutate(pop_yr = pop *5)  #2015-2019
```

```{r}
# 1. prepare feature, cov, collision-----------------
features <-  c(
  "trees",
  #"grade",
  "median", #remove "area_"
  "median_barrier", #added
  "sidewalk", #no "area_"
  "sidewalk_obstruction",
  #"road_width",
  "lane_marking", #"road_marks"
  #"warning_signs",
  "sign_traffic",  #"road_signs"
  "traffic_light", #no light"s"
  #"st_dir",  only 1,2 directions
  "lane_bus", #"num_lane_total"
  "sign_crossing",
  "crosswalk",
  #"pedxwalk_signs",
  "sign_school_zone", #removed bc correlated
  #"stop_signs_v",
  "sign_stop",  #rename
  "sign_yield",  #rename
  #"total_st_signs",
  "bus_stop",  #gis-routes
  "brt_station", #gis-routes
  "speed_bump",
  "lane_bike", #gis-length
  # "traffic_fines_tot"
  ##GIS below:
  # "st_dir",
  #"num_lanes_total",
  "road_width"
)

# 2. Characteristics by tertile---------
## to add counts -----
ter_descrp <- predict312k_calle_adj %>% 
  left_join(add_gis, by = "CodigoCL") %>% 
  #rerun because school zone removed from features
  dplyr::select(CodigoCL, st_dir, num_lanes_total, all_of(features)) %>% 
  drop_na() %>% 
  mutate(
    across(all_of(features), ~na_if(., 0), .names = "{.col}_ter"), #turn to NA so that it doesn't get computed
    across(ends_with("_ter"), ~ntile(., 3)),
    across(ends_with("_ter"), ~replace_na(., 0)), #turn it back 0
    across(ends_with("_ter"), ~factor(., levels = c("0", "1", "2", "3"))), #*change level  for descrp stat** 
    
    # lane factors:
    num_lane = case_when(
      num_lanes_total == 1 ~ "1",  #also numeric -> character
      num_lanes_total == 2 ~ "2",
      num_lanes_total %in% c(3, 4) ~ "3-4",
      num_lanes_total >= 5 ~ "5+"
    ),
    num_lane = factor(num_lane, levels = c("1", "2", "3-4", "5+")), #change level  for descrp stat 
    st_dir = factor(st_dir)
  ) %>% 
  left_join(collision_calle, by = "CodigoCL") %>% 
  mutate(
    across(injury:total, ~replace_na(., 0))
  )
## join covar --------
ter_cov_descrp <- covar_100 %>%
  left_join(pop800, by = "CodigoCL") %>% 
  # scaling NOT needed in descrp stat
  # mutate(
  #   across(starts_with("pct"), ~ scale(.x)[,1])
  # ) %>%  #remove pop_density
  left_join(ses_100, by = "CodigoCL") %>% 
  mutate(ses_cat_r = factor(ses_cat, levels = rev(levels(ses_cat)))) %>% 
  left_join(road_type, by = "CodigoCL") %>% 
  mutate(road_type2 = factor(road_type2, levels = c("Local", "Arterial", "Collector", "Other"))) %>% 
  #rename(codigocl = CodigoCL) %>% 
  right_join(ter_descrp, by = "CodigoCL") %>% 
  drop_na(road_type2) |> 
  mutate(collision_yn = if_else(total>0, 1, 0))  # for table1 presented by outcome
```

## table1 (with school zone)
```{r}
### complete case analysis ------
ter_var <- ter_cov_descrp |> 
  select(ends_with("_ter")) |> 
  colnames() |> 
  head(-1)## road_width not presented in tertile

ter_cov_descrp2 <- ter_cov_descrp |>  
  select(CodigoCL, all_of(features), all_of(ter_var), st_dir, num_lane, 
    pop, # NO NEED to use pop_yr here, confusing 
    pct_apt, pct_home, pct_unoccu, 
    pct_male, 
    pct_yr_0_9, pct_yr_10_19, pct_yr_20_29, pct_yr_30_39, pct_yr_40_49, pct_yr_50_59, pct_yr_60_69, pct_yr_70_79, pct_yr_80_plus, #20-29 included here, not in model
    road_type2, 
    ses_cat_r,
    collision_yn) |> 
  mutate(
    collision_yn = case_match(
      collision_yn,
      0 ~ "Collision = 0",
      1 ~ "Collision > 0"
    )
  ) |> 
  drop_na()

### descrp stat-------
ter_cov_descrp2 |>
  select(-CodigoCL, -features[-length(features)]) |> 
  tbl_summary(
    by = collision_yn,
    label  = list(
      trees_ter = "Trees",
      median_ter = "Median",
      median_barrier_ter = "Median Barrier",
      sidewalk_ter = "Sidewalk",
      sidewalk_obstruction_ter = "Sidewalk Obstruction",
      lane_marking_ter = "Lane Marking",
      sign_traffic_ter = "Traffic Sign",
      traffic_light_ter = "Traffic Light",
      lane_bus_ter = "Bus Lane",
      sign_crossing_ter = "Crossing Sign",
      crosswalk_ter = "Crosswalk",
      sign_stop_ter = "Stop Sign",
      sign_yield_ter = "Yield Sign",
      bus_stop_ter = "Bus Stop",
      brt_station_ter = "BRT Station",
      speed_bump_ter = "Speed Bump",
      lane_bike_ter = "Bike Lane",
      road_width = "Road Width",
      st_dir = "Street Direction",
      num_lane = "Number of Lanes",
      pct_apt = "Apartment (% of Total Dwellings)",
      pct_home = "House (% of Total Dwellings)",
      pct_unoccu = "Unoccupied (% of Total Dwellings)",
      pop = "Population",
      pct_male = "Male Population (%)",
      pct_yr_0_9 = "Population Age 0-9 (%)",
      pct_yr_10_19 = "Population Age 10-19 (%)",
      pct_yr_20_29 = "Population Age 20-29 (%)",
      pct_yr_30_39 = "Population Age 30-39 (%)",
      pct_yr_40_49 = "Population Age 40-49 (%)",
      pct_yr_50_59 = "Population Age 50-59 (%)",
      pct_yr_60_69 = "Population Age 60-69 (%)",
      pct_yr_70_79 = "Population Age 70-79 (%)",
      pct_yr_80_plus = "Population Age 80+ (%)",
      road_type2 = "Road Type",
      ses_cat_r = "Socioeconomic Status Category"
    ),
    missing = "no"
  ) |> 
  bold_labels() |> 
  as_flex_table() 
```

## table 2
```{r}

ter_cov_descrp2 |> 
  select(-CodigoCL) |> 
  filter(trees_ter != "0") |>
  mutate(trees_ter = fct_drop(trees_ter)) |> 
  tbl_summary(
    by = "trees_ter",
    include = "trees"
  ) 

tbl_summary_x <- function(feature, data){
  feature_ter <- paste0(feature, "_ter")
  data |> 
    filter(.data[[feature_ter]] != "0") |> 
    mutate(!!feature_ter := fct_drop(.data[[feature_ter]])) |> 
    tbl_summary(
      by = {{feature_ter}},
      include = {{feature}}
    ) |> 
    modify_header(all_stat_cols() ~ "**{level}**") 
}

result <- map(features[-length(features)], ~tbl_summary_x(.x, ter_cov_descrp2))

tbl_stack(result) |> 
  modify_spanning_header(all_stat_cols() ~ "**Area-adjusted Count of Street Features**") |> 
  modify_footnote(all_stat_cols()~ "Median (Q1, Q3) of each nonzero tertile") |> 
  bold_labels() |> 
  as_flex_table()
```

## fig 1-map of collision st
```{r}
#| fig-height: 9
calle_sf <- readRDS("../../../../clean_data/calles/calle_shapefile.rds")

collision_sf <- collision_calle |> 
  left_join(calle_sf, by = "CodigoCL") |> 
  st_as_sf()

analysis_sf <- ter_cov_descrp |> 
  select(CodigoCL) |> 
  left_join(calle_sf, by = "CodigoCL") |> 
  st_as_sf()

ggplot()+
  geom_sf(data = analysis_sf, aes(color = "Streets without collisions"), size = 0.5, fill = NA)+
  geom_sf(data = collision_sf, aes(color = "Streets with collisions"), size = 0.5, fill = NA)+
  scale_color_manual(values = c("Streets with collisions" = "#F76806", "Streets without collisions" = "#808080"))+
  theme_minimal()+
  labs(
    color = ""
  )+
  theme(
    panel.background = element_rect(color = "black"),
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.8, 0.05)
  )
```

## fig 2-univariate analysis
```{r}
#| fig-height: 8
#| fig-width: 7.5
pg_features <- c("st_dir", "num_lane", features)
source("../../../../functions/plot_facet_RR.R")
feature_RR <- readRDS("feature312k_ter_RR.rds")

fea_plot_RR1 <- feature_RR %>%
  mutate(
    #note the modification for num_lane
    tertile = if_else(term %in% c("num_lane1","num_lane3-4", "num_lane5+"), 
      str_sub(term, 9), str_sub(term,-1)),
    predictor = case_when(
      term %in% c("num_lane1","num_lane3-4", "num_lane5+") ~ "num_lane",
      .default = str_sub(term, end = -2)
    )) %>% 
  filter(predictor %in% pg_features) %>% 
  mutate(
    predictor = case_match(
      predictor,
      "trees" ~ "Trees",
      "median" ~ "Median",
      "median_barrier" ~ "Median Barrier",
      "sidewalk" ~ "Sidewalk",
      "sidewalk_obstruction" ~ "Sidewalk Obstruction",
      "lane_marking" ~ "Lane Marking",
      "sign_traffic" ~ "Traffic Sign",
      "traffic_light" ~ "Traffic Light",
      "lane_bus" ~ "Bus Lane",
      "sign_crossing" ~ "Crossing Sign",
      "crosswalk" ~ "Crosswalk",
      "sign_school_zone" ~ "School Zone Sign", #not in multivariate
      "sign_stop" ~ "Stop Sign",
      "sign_yield" ~ "Yield Sign",
      "bus_stop" ~ "Bus Stop",
      "brt_station" ~ "Brt Station",
      "speed_bump" ~ "Speed Bump",
      "lane_bike" ~ "Bike Lane",
      "road_width" ~ "Road Width",
      "st_dir" ~ "St. Directions",
      "num_lane" ~ "Total Lanes"
    ),
    category = case_match(tertile,
      ")" ~ "Low (ref)",
      "0" ~ "Zero",
      "2" ~ "Medium",
      "3" ~ "High",
      .default = tertile),
    category = if_else(predictor == "St. Directions", "2-way", category)
  )

fea_plot_RR1 %>% 
  plot_facet_RR()+
  labs(
    subtitle = "Offset by population within 800m from each street. Adjusted for types of dwellings,\nage groups, sex composition, road types and SES within 100m from streets.",
    caption = "'St. Directions' is included as '1-way' and '2-way', relative to '1-way'. \n'Total Lanes' is included as categories of total lane counts, relative to 2 lanes. \nOther street features are separated into zeros and nonzero tertiles for analysis.\n Comparisons are relative to the 'Low' category."
  )+
  theme(
    plot.title.position = "plot"
  )
```

## fig 3-multivariatae analysis
```{r}
#| fig-height: 8
#| fig-width: 7.5
source("../../../../functions/plot_facet_RR.R")

multi_feature_RR <- readRDS("multi_feature312k_ter_RR.rds")


fea_plot_RR2 <- multi_feature_RR %>% 
  mutate(
    #note the modification for num_lane
    tertile = if_else(term %in% c("num_lane1","num_lane3-4", "num_lane5+"), 
      str_sub(term, 9), str_sub(term,-1)),
    predictor = case_when(
      term %in% c("num_lane1","num_lane3-4", "num_lane5+") ~ "num_lane",
      .default = str_sub(term, end = -2)
    )) %>%
  filter(predictor %in% pg_features) %>%
  mutate(
    predictor = case_match(
      predictor,
      "trees" ~ "Trees",
      "median" ~ "Median",
      "median_barrier" ~ "Median Barrier",
      "sidewalk" ~ "Sidewalk",
      "sidewalk_obstruction" ~ "Sidewalk Obstruction",
      "lane_marking" ~ "Lane Marking",
      "sign_traffic" ~ "Traffic Sign",
      "traffic_light" ~ "Traffic Light",
      "lane_bus" ~ "Bus Lane",
      "sign_crossing" ~ "Crossing Sign",
      "crosswalk" ~ "Crosswalk",
      #"sign_school_zone" ~ "School Zone Sign", #not in multivariate
      "sign_stop" ~ "Stop Sign",
      "sign_yield" ~ "Yield Sign",
      "bus_stop" ~ "Bus Stop",
      "brt_station" ~ "Brt Station",
      "speed_bump" ~ "Speed Bump",
      "lane_bike" ~ "Bike Lane",
      "road_width" ~ "Road Width",
      "st_dir" ~ "St. Directions",
      "num_lane" ~ "Total Lanes"
    ),
    category = case_match(tertile,
      ")" ~ "Low (ref)",
      "0" ~ "Zero",
      "2" ~ "Medium",
      "3" ~ "High",
      .default = tertile),
    category = if_else(predictor == "St. Directions", "2-way", category)
  )

fea_plot_RR2 %>% 
  plot_facet_RR()+
  scale_fill_manual(values = rep(c("#ffffff00", "#B6D0E2"), 20), guide = "none")+
  labs(
    subtitle = "Offset by population within 800m from each street. Adjusted for types of dwellings,\nage groups, sex composition, road types and SES within 100m from streets.",
    caption = "'St. Directions' is included as '1-way' and '2-way', relative to '1-way'. \n'Total Lanes' is included as categories of total lane counts, relative to 2 lanes. \nOther street features are separated into zeros and nonzero tertiles for analysis.\n Comparisons are relative to the 'Low' category."
  )+
  theme(
    plot.title.position = "plot"
  )

```

## univariate-RR tables
```{r}
fea_plot_RR1 |> 
  select(predictor, category, RR_95CI, p.value) |> 
  knitr::kable()

```

## multivariate - RR tables
```{r}
fea_plot_RR2 |> 
  select(predictor, category, RR_95CI, p.value) |> 
  knitr::kable()

```

## Road-type stratified analysis
```{r}
#| fig-width: 9
#| fig-height: 8
art_ter_RR <- readRDS("rdtype_strat312k/multi_art_ter_RR.rds")
col_ter_RR <- readRDS("rdtype_strat312k/multi_col_ter_RR.rds")

rdtype_RR <- bind_rows(art_ter_RR, col_ter_RR) %>% 
  mutate(
    #note the modification for num_lane
    tertile = if_else(term %in% c("num_lane1","num_lane3-4", "num_lane5+"), 
      str_sub(term, 9), str_sub(term,-1)),
    predictor = case_when(
      term %in% c("num_lane1","num_lane3-4", "num_lane5+") ~ "num_lane",
      .default = str_sub(term, end = -2)
    )) %>%
  filter(predictor %in% pg_features) %>%
  mutate(
    predictor = case_match(
      predictor,
      "trees" ~ "Trees",
      "median" ~ "Median",
      "median_barrier" ~ "Median Barrier",
      "sidewalk" ~ "Sidewalk",
      "sidewalk_obstruction" ~ "Sidewalk Obstruction",
      "lane_marking" ~ "Lane Marking",
      "sign_traffic" ~ "Traffic Sign",
      "traffic_light" ~ "Traffic Light",
      "lane_bus" ~ "Bus Lane",
      "sign_crossing" ~ "Crossing Sign",
      "crosswalk" ~ "Crosswalk",
      #"sign_school_zone" ~ "School Zone Sign", #not in multivariate
      "sign_stop" ~ "Stop Sign",
      "sign_yield" ~ "Yield Sign",
      "bus_stop" ~ "Bus Stop",
      "brt_station" ~ "Brt Station",
      "speed_bump" ~ "Speed Bump",
      "lane_bike" ~ "Bike Lane",
      "road_width" ~ "Road Width",
      "st_dir" ~ "St. Directions",
      "num_lane" ~ "Total Lanes"
    ),
    category = case_match(
      tertile,
      ")" ~ "Low (ref)",
      "0" ~ "Zero",
      "2" ~ "Medium",
      "3" ~ "High",
      .default = tertile
    ),
    category = if_else(predictor == "St. Directions", "2-way", category)
  )

p3_arterial <- rdtype_RR %>% 
  filter(road_type == "arterial") %>% 
  plot_facet_RR()+
  scale_fill_manual(values = rep(c("#ffffff00", "#B6D0E2"), 20), guide = "none")+
  labs(
    title = "Arterial roads",
    caption = ""
  )+
  theme(plot.title = element_text(size = 11, hjust = 0))

p3_collector <- rdtype_RR %>% 
  filter(road_type == "collector") %>% 
  plot_facet_RR()+
  scale_fill_manual(values = rep(c("#ffffff00", "#B6D0E2"), 20), guide = "none")+
  labs(
    y = "",
    title = "Collector roads",
    caption = "'St. Directions' is included as '1-way' and '2-way', relative to '1-way'. \n'Total Lanes' is included as categories of total lane counts, relative to 2 lanes. \nOther street features are separated into zeros and nonzero tertiles for analysis.\n Comparisons are relative to the 'Low' category."
  )+
  theme(plot.title = element_text(size = 11, hjust = 0))

(p3_arterial|p3_collector) +
  plot_annotation(
    'Road type-stratified association of street features with pedestrian collisions in Bogotá',
    theme=theme(plot.title=element_text(size=12, face = "bold"))
  )

```

## road-type stratified RR tables
```{r}
rdtype_RR |> 
  mutate(RR_95CI = paste0(round(estimate, 2)," (", round(conf.low, 2), ",", round(conf.high, 2), ")")
  ) |> 
  select(predictor, category, RR_95CI, p.value) |> 
  knitr::kable()

```